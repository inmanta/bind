"""
    Copyright 2016 Inmanta

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

    Contact: bart@inmanta.io
"""
import dns
import ip

implementation zoneFile for dns::Zone:
    r_pk = std::Package[host=master.host, name="bind-chroot"]
    r_sv = std::Service[host=master.host, name="named-chroot"]
    dir = std::Directory[host=master.host, path="/var/named/chroot/var/named/master"]
    zone_content = std::template("bind/zonefile.tmpl")
    std::ConfigFile(host=master.host, content=bind::serial(domain, zone_content),
                    path="/var/named/chroot/var/named/master/{{ domain }}.db",
                    mode=644, owner="root", group="root", requires=dir, provides=r_sv)
end

entity Server extends dns::Server:
    string axfr_allowed=""
    string additional_config=""
end

implementation bindDnsServer for Server:
    bind_pkg = std::Package(host=host, name="bind-chroot", state="installed")
    std::Package(host=host, name="bind-utils", state="installed")
    bind_svc = std::Service(host=host, name="named-chroot", state="running", onboot=true)

    config_file = std::ConfigFile(host=host, path="/var/named/chroot/etc/named.conf",
                                  content=std::template("bind/named.conf.tmpl"))
    config_file.requires = bind_pkg

    bind_svc.requires = [bind_pkg, config_file]

    d_master = std::Directory(host=host, path="/var/named/chroot/var/named/master", owner="root",
                   group="named", mode=755, requires=bind_pkg)
    d_slave = std::Directory(host=host, path="/var/named/chroot/var/named/slaves", owner="named",
                   group="named", mode=755, requires=bind_pkg)

    self.ipaddress = host.ip
end


implement dns::Zone using zoneFile
implement Server using bindDnsServer

